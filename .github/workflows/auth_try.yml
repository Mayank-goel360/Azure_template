# .github/workflows/pr-validate.yml
name: 🔐 PR Validation via OIDC (GET & POST)

on:
  pull_request_target:
    types: [opened, synchronize]

permissions:
  id-token: write    # enable OIDC token issuance
  contents: read     # allow checkout of code

env:
  CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  API_BASE: ${{ secrets.SENTINEL_CONTENT_API_URL }}

jobs:
  pr-validate:
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout PR HEAD at exact commit
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: 📁 Collect changed JSON files
        run: |
          echo "🔍 Finding changed JSON files..."
          BASE=${{ github.event.pull_request.base.ref }}

          git fetch origin $BASE
          echo "✅ Fetched origin/$BASE"

          echo "🔁 Git diff from origin/$BASE to HEAD:"
          git diff --name-only origin/$BASE...HEAD

          mapfile -t files < <(git diff --name-only origin/$BASE...HEAD | grep '\.json$' || true)

          echo "🧾 JSON files to process (${#files[@]}): ${files[*]:-<none>}"

          json_array="["
          for file in "${files[@]}"; do
            if [ -f "$file" ]; then
              content=$(jq -c . < "$file")
              json_array+="{\"filename\":\"$file\",\"content\":$content},"
            fi
          done
          json_array="${json_array%,}]"
          echo "$json_array" > files_payload.json
          echo "JSON_PAYLOAD_PATH=files_payload.json" >> $GITHUB_ENV
          echo "✅ Final JSON array:"
          cat files_payload.json



      # 3. Send a simple GET request to "/"
      - name: 📡 Send GET request to protected root endpoint
        run: |
          echo "🚀 GET $API_BASE/"
          response=$(curl -s -H "Authorization: Bearer $TOKEN" "$API_BASE/")
          echo "🔍 GET response:"
          echo "$response" | jq . || true


      # 5. Send POST request with JSON payload to "/"
      - name: 🚀 Send POST request with JSON payload to root
        run: |
          echo "🚀 POST $API_BASE/"
          echo "📄 Payload contents:"
          cat "$JSON_PAYLOAD_PATH" || { echo "❌ files_payload.json not found"; exit 1; }
          echo

          response=$(curl -s -w "\n%{http_code}" -X POST "$API_BASE/" \
            -H "Authorization: Bearer $TOKEN" \
            -H "Content-Type: application/json" \
            --data @"$JSON_PAYLOAD_PATH")

          body=$(echo "$response" | head -n -1)
          status_code=$(echo "$response" | tail -n1)
          echo "🌐 HTTP status: $status_code"
          echo "🌐 Response body:"
          echo "$body" | jq . || true

          if [ "$status_code" -ne 200 ]; then
            echo "❌ POST failed (HTTP $status_code)"
            exit 1
          fi
          result_status=$(jq -r '.status' <<< "$body")
          result_message=$(jq -r '.message' <<< "$body")
          if [ "$result_status" != "passed" ]; then
            echo "❌ Validation failed: $result_message"
            exit 1
          fi
          echo "✅ Validation passed: $result_message"
